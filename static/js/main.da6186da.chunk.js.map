{"version":3,"sources":["redux/actions.js","components/NoteAdder.js","components/NoteItem.js","components/NoteContainer.js","App.js","reportWebVitals.js","redux/initial-state.js","redux/reducers.js","redux/store.js","index.js"],"names":["ADD_NOTE","DELETE_NOTE","UPDATE_NOTE","useStyle","makeStyles","createStyles","titleField","width","marginBottom","addButton","height","marginLeft","boxStyle","position","top","left","transform","bgcolor","border","boxShadow","p","style","NoteAdder","React","useState","open","setOpen","dispatch","useDispatch","titleFieldRef","useRef","dataFieldRef","classes","Box","Button","variant","color","className","onClick","Modal","onClose","sx","TextField","id","label","inputRef","multiline","minRows","maxRows","title","current","value","data","type","payload","useStyles","root","margin","cancelBtn","marginRight","NoteItem","props","updatedTitle","setUpdatedTitle","updatedData","setUpdatedData","handleTextChange","e","target","updateNotesItem","handleClose","Card","minWidth","CardContent","Typography","gutterBottom","CardActions","size","onChange","btn","padding","backgroundColor","NoteContainer","notes","useSelector","state","map","note","key","nanoid","theme","appContainer","marginTop","wrapper","textAlign","flexGrow","maxWidth","App","AppBar","Toolbar","Container","fixed","Paper","elevation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","stringState","window","localStorage","getItem","_","isEmpty","JSON","parse","lodaStateFromLocalStorage","saveNotesToBrowser","setItem","stringify","reducer","action","newNotes","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da6186da.chunk.js","sourcesContent":["export const ADD_NOTE = 'DD_NOTE';\nexport const DELETE_NOTE = 'DELETE_NOTE';\n\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\n","import React, { ChangeEvent, useState, useRef, RefObject } from 'react';\nimport { Box, Button, TextField, Modal, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { ADD_NOTE } from '../redux/actions';\n\nconst useStyle = makeStyles(() => createStyles({\n  titleField: {\n    width: '100%',\n    marginBottom: '20px'\n  },\n  addButton: {\n    height: 55,\n    marginLeft: '10px'\n  },\n  boxStyle: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n  }\n}));\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n};\n\nconst NoteAdder = () => {\n\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch();\n  const titleFieldRef = useRef(null);\n  const dataFieldRef = useRef(null);\n\n  const addNotesItem = () => {\n    const title = titleFieldRef.current.value;\n    const data = dataFieldRef.current.value;\n    if(title && data) {\n      dispatch({\n        type: ADD_NOTE,\n        payload: {\n          title,\n          data\n        }\n      });\n      setOpen(false);\n    }\n  }\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const classes = useStyle();\n  return (\n    <Box>\n      <Button variant=\"contained\" color=\"primary\" className={classes.addButton} onClick={handleOpen}>\n        Add Note\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <TextField id=\"note-title\" className={classes.titleField}  label=\"Title\" variant=\"outlined\" inputRef={titleFieldRef}/>\n          <TextField variant=\"outlined\" className={classes.titleField} label=\"Enter Notes\" multiline minRows={2} maxRows={4} inputRef={dataFieldRef} />\n          <Button variant=\"contained\" color=\"primary\" onClick={addNotesItem}>Save</Button>\n        </Box>\n      </Modal>\n    </Box>\n  )\n}\n\nexport default NoteAdder;","import React, { useRef } from 'react';\nimport { Box, Typography, Card, CardContent, CardActions, Button, Modal, TextField } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { DELETE_NOTE, UPDATE_NOTE } from '../redux/actions';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => createStyles({\n  root: {\n    margin: 20,\n  },\n  titleField: {\n    width: '100%',\n    marginBottom: '20px'\n  },\n  cancelBtn: {\n    marginRight: '10px'\n  }\n}));\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n};\n\nconst NoteItem = (props) => {\n  const classes = useStyles();\n  const { title, id, data } = props;\n  const dispatch = useDispatch();\n  const [open, setOpen] = React.useState(false);\n  const [updatedTitle, setUpdatedTitle] = React.useState(title);\n  const [updatedData, setUpdatedData] = React.useState(data);\n\n  const handleDeleteClick = () => {\n    dispatch({\n      type: DELETE_NOTE,\n      payload: {\n        id\n      }\n    })\n  }\n\n  const handleTextChange = (e) => {\n    if(e.target.id === 'title') {\n      setUpdatedTitle(e.target.value);\n    } else if(e.target.id === 'data') {\n      setUpdatedData(e.target.value);\n    } \n  }\n\n  const updateNotesItem = () => {\n    if(updatedTitle && updatedData) {\n      dispatch({\n        type: UPDATE_NOTE,\n        payload: {\n          id,\n          updatedTitle,\n          updatedData\n        }\n      });\n      setOpen(false);\n    }\n  }\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const showEditModal = () => {\n    return (\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <TextField value={updatedTitle} id=\"title\" className={classes.titleField} label=\"Title\" variant=\"outlined\" onChange={handleTextChange}/>\n          <TextField value={updatedData} id=\"data\" variant=\"outlined\" className={classes.titleField} label=\"Enter Notes\" multiline minRows={2} maxRows={4} onChange={handleTextChange} />\n          <Button variant=\"contained\" color=\"secondary\" className={classes.cancelBtn} onClick={handleClose}>Cancel</Button>\n          <Button variant=\"contained\" color=\"primary\" className={classes.btn} onClick={updateNotesItem}>Save</Button>\n        </Box>\n      </Modal>\n    )\n  }\n\n  return (\n    <Card sx={{ minWidth: 20 }} className={classes.root} >\n      <CardContent>\n        <Typography variant={'h4'} gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant={'subtitle1'} gutterBottom>\n          {data}\n        </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleOpen}>Edit</Button>\n          <Button size=\"small\" variant=\"outlined\" color=\"secondary\" onClick={handleDeleteClick}>Delete</Button>\n        </CardActions>\n        {showEditModal()}\n    </Card>\n  )\n}\n\nexport default NoteItem;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Box, Divider, Grid, Typography, List, Card, CardContent, CardActions, Button } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n// import { TodosState } from '../redux/initial-state';\nimport NoteItem from './NoteItem';\n// import TodoAdder from './TodoAdder';\nimport { nanoid } from 'nanoid';\n\nconst useStyles = makeStyles(() => createStyles({\n  root: {\n    margin: 20,\n    padding: 20,\n    backgroundColor: \"rgb(92.9%, 92.9%, 92.9%)\"\n  }\n}));\n\nconst NoteContainer = () => {\n  const classes = useStyles();\n  const { notes } = useSelector((state) => {\n    return {\n      notes: state.notes\n    }\n  });\n\n\n\n  return (\n    <Box>\n      { \n        notes?.map((note, key) => {\n        return <NoteItem {...note} key={nanoid()} />\n        })\n      }\n    </Box>\n  )\n}\n\nexport default NoteContainer;","import React from 'react';\nimport { AppBar, Box, Container, Paper, Toolbar, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport NoteAdder  from './components/NoteAdder';\nimport NoteContainer  from './components/NoteContainer';\n\nconst useStyles = makeStyles((theme) => createStyles({\n  appContainer: {\n    padding: '0px 100px',\n    marginTop: 100\n  },\n  wrapper: {\n    textAlign: 'center',\n    width: '100%'\n  },\n  root: {\n    height: 216,\n    flexGrow: 1,\n    maxWidth: 400,\n  }\n}))\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <Box>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h5\">\n            Note App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Container className={classes.appContainer} fixed>\n        <Paper className={classes.wrapper} elevation={0}>\n          <NoteAdder />\n        </Paper>\n        <NoteContainer />\n      </Container>\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import _ from 'lodash';\n\n\n\nfunction lodaStateFromLocalStorage() {\n  const stringState = window.localStorage.getItem('notes');\n  if(stringState && !_.isEmpty(JSON.parse(stringState))) {\n    return JSON.parse(stringState);\n  }\n  return null;\n}\n\nexport const initialState = lodaStateFromLocalStorage() || {\n  notes: [\n    {\n      id: '0',\n      title: 'Note 1',\n      data: 'Hello I am Gourav Manna'\n    }\n  ]\n};\n\n  ","import { nanoid } from 'nanoid';\nimport { ADD_NOTE, DELETE_NOTE, UPDATE_NOTE } from './actions';\nimport { initialState } from './initial-state';\n\nfunction saveNotesToBrowser(state) {\n  window.localStorage.setItem('notes', JSON.stringify(state));\n}\n\nfunction reducer(state = initialState, action) {\n  \n  switch(action.type) {\n\n    case ADD_NOTE: {\n      const { title, data } = action.payload;\n      const newNotes = [\n        ...state.notes,\n        {\n          id: nanoid(),\n          title,\n          data\n        }\n      ];\n      saveNotesToBrowser({notes: newNotes});\n      return {\n        ...state,\n        notes: newNotes\n      }\n    }\n\n    case DELETE_NOTE: {\n      const { id } = action.payload;\n      const newNotes = state.notes.filter(note => note.id!==id);\n      saveNotesToBrowser({notes: newNotes});\n      return {\n        ...state,\n        notes: newNotes\n      }\n    }\n\n    case UPDATE_NOTE: {\n      const { updatedTitle, updatedData, id } = action.payload;\n      const newNotes = state.notes.map(note => {\n        if(note.id===id) {\n          return {\n            id,\n            title: updatedTitle,\n            data: updatedData\n          }\n        } \n        return note;\n      });\n      saveNotesToBrowser({notes: newNotes});\n      return {\n        ...state,\n        notes: newNotes\n      }\n    }\n\n    default:\n      saveNotesToBrowser(state);\n      return state;\n  }\n}\n\nexport default reducer;","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nexport const store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}